---
import { CollectionEntry, getCollection } from "astro:content";
import i18next, { changeLanguage, t } from "i18next";
import { localizePath } from "astro-i18next";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import slugify from "@utils/slugify";
import { SITE } from "@config";

changeLanguage("es");

const tPageTitle = t("tag.title");
const tPageDesc = t("tag.description");
export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const tags = getUniqueTags(posts);
  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}
const { tag } = Astro.props;
const posts = await getCollection(
  "blog",
  ({ id, data }) => id.startsWith(`${i18next.language}/`) && !data.draft
);
const tagPosts = getPostsByTag(posts, tag);
---

<Layout title={`${tPageTitle}:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main pageTitle={`${tPageTitle}:${tag}`} pageDesc={`${tPageDesc} "${tag}".`}>
    <ul
      class={`grid grid-cols-1 gap-8 sm:grid-cols-3 m-auto mt-10 justify-center`}
    >
      {
        tagPosts.map(({ data }) => (
          <Card
            title={data.title}
            body={data.description}
            ogImage={data.ogImage}
            href={localizePath(`/posts/${slugify(data)}`, i18next.language)}
            published={data.published}
          />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>
